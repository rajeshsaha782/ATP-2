@model easylife.Models.UserDashboardViewModel.myDashboardViewModel
@{
    ViewBag.Title = "EasyLife | Dashboard";
}
<div class="container-fluid col-md-12">
						<ol class="breadcrumb">
						<li><a href=@Url.Action("index","UserHome")><i class="fa fa-dashboard"></i> Home</a></li>
						<li><a class="active"><i class="fa fa-dashboard"></i>Dashboard</a></li>
						
						
						</ol>
					</div>
					
				
						
						<div class="row">
							<div class="col-md-3 col-xs-6">
							  <!-- small box -->
							  <div class="small-box bg-aqua" >
								<div class="inner">
								  <h3>@Model.OderCount</h3>

								  <p>Total purchase</p>
								</div>
								<div class="icon" >
								  <i class="glyphicon glyphicon-file" style="height:20px"></i>
								</div>
								<a href=@Url.Action("myOrders", new { id=Model.MemberId}) class="small-box-footer">More info <i class="glyphicon glyphicon-chevron-right"></i></a>
							  </div>
							</div>
							<!-- ./col -->
							<div class="col-md-3 col-xs-6">
							  <!-- small box -->
							  <div class="small-box bg-green">
								<div class="inner">
								  <h3>@Model.CouponCount</h3>

								  <p>My Offers</p>
								</div>
								<div class="icon">
								  <i class="glyphicon glyphicon-list-alt"></i>
								</div>
								<a href=@Url.Action("myCoupon", new { id=Model.MemberId}) class="small-box-footer">More info <i class="glyphicon glyphicon-chevron-right"></i></a>
							  </div>
							</div>
							<!-- ./col -->
							<div class="col-md-3 col-xs-6">
							  <!-- small box -->
							  <div class="small-box bg-yellow">
								<div class="inner">
								  <h3>@Model.ReviewCount</h3>

								  <p>My Review</p>
								</div>
								<div class="icon">
								  <i class="glyphicon glyphicon-pencil"></i>
								</div>
								<a href=@Url.Action("myReviews", new { id=Model.MemberId}) class="small-box-footer">More info <i class="glyphicon glyphicon-chevron-right"></i></a>
							  </div>
							</div>
							
							<div class="col-md-3 col-xs-6">
							  <!-- small box -->
							  <div class="small-box bg-red">
								<div class="inner">
								  <h3>@Model.FavoriteCount</h3>

								  <p>My Favorites</p>
								</div>
								<div class="icon">
								  <i class="glyphicon glyphicon-heart"></i>
								</div>
								<a href=@Url.Action("myFavorite", new { id=Model.MemberId}) class="small-box-footer">More info <i class="glyphicon glyphicon-chevron-right"></i></a>
							  </div>
							</div>

						  </div>
						
						
						
						
						<div class="container-fluid">
							
							
						<table class="table table-striped ">
								
								<tbody>
									
									
									<tr>
                                     
										<td > <a href=@Url.Action("info", new { id=Model.MemberId})><img class="img-circle img2" src="~/resources/user.jpg"></a></td>
										<td style="text-align:center;padding-top:70px;">
                                            <p ><strong style="color:blue;font-size:30px">Welcome</strong></p>
                                            <p><b>@Model.Name</b></p>
											<p>Customer Id:<b>@Model.MemberId</b></p>
											<p><b>Address</b></p>
											<p>@Model.Address</p>
										<p><a href=@Url.Action("manageAddress", new { id=Model.MemberId})><button type="button" class="btn btn-info" >Manage Address</button></a></p>
										</td>
											
											
											
										@if (Model.member.Point >= 1500) { <td style="text-align:center;"><img class="img-circle img2" src="~/resources/platinum.jpg"><p>Current points:<b style="color:blue">@Model.member.Point</b></p></td>}
          							@if ((Model.member.Point >= 500)&&(Model.member.Point<1500)) { <td style="text-align:center;"><img class="img-circle img2" src="~/resources/gold.jpg"><p>Current points:<b style="color:blue">@Model.member.Point</b></p></td>}
          							@if ((Model.member.Point >= 0)&&(Model.member.Point<500)) { <td style="text-align:center;"><img class="img-circle img2" src="~/resources/bronze.jpg"><p>Current points:<b style="color:blue">@Model.member.Point</b></p></td>}
          
									
											
											
										
										
										
									</tr>
									
									
									
								</tbody>
							</table>
						
							
						
					</div>	
					<div class="container-fluid well" style="margin-top:30px">
						<div>
							<select id="year">
								<option value="2018">2018</option>
								<option value="2017">2017</option>
								
							</select>
						</div>
						 <div class="col-md-14" >

						  <div class="box box-primary">
							<div class="box-header with-border">
							  <h3 class="box-title">Purchasing History</h3>
							</div>
							<div class="box-body">
							  <div class="chart">
								<canvas id="areaChart" style="height:250px"></canvas>
							  </div>
							</div>

						  </div>
						  </div>
					</div>

<script src="~/Styles/jquery.min.js"></script>
<script src="~/Styles/Chart.js"></script>




<script>


	if($("select").val()==2017)
	{
		var TotalPurchase = [1128, 1148, 3140, 1119, 1186, 3127, 1190, 2280, 1270, 2230, 2250, 1275];
	}
	else if($("select").val()==2018)
	{
		var TotalPurchase = [2128, 2148, 1140, 2119, 1186, 3127, 1190, 2280, 1270, 2230, 2250, 1275];
	}
	
   // var TotalPurchase = [1128, 1148, 3140, 1119, 1186, 3127, 1190, 2280, 1270, 2230, 2250, 1275];
  $(function () {

    var areaChartCanvas = $('#areaChart').get(0).getContext('2d')
    // This will get the first returned node in the jQuery collection.
    var areaChart       = new Chart(areaChartCanvas)
    
    var areaChartData = {
      labels  : ['January', 'February', 'March', 'April', 'May', 'June', 'July','August','September','October','November','Decmber'],
      datasets: [
       
        {
          label               : 'Total sell',
          fillColor           : 'rgba(250,91,98,0.9)',
          strokeColor         : 'rgba(60,141,188,0.8)',
          pointColor          : '#3b8bba',
          pointStrokeColor    : 'rgba(60,141,188,1)',
          pointHighlightFill  : '#fff',
          pointHighlightStroke: 'rgba(60,141,188,1)',
          data: [TotalPurchase[0], TotalPurchase[1], TotalPurchase[2], TotalPurchase[3], TotalPurchase[4], TotalPurchase[5], TotalPurchase[6], TotalPurchase[7], TotalPurchase[8], TotalPurchase[9], TotalPurchase[10], TotalPurchase[11]]
        }
		
      ]
    }

    var areaChartOptions = {
      //Boolean - If we should show the scale at all
      showScale               : true,
      //Boolean - Whether grid lines are shown across the chart
      scaleShowGridLines      : false,
      //String - Colour of the grid lines
      scaleGridLineColor      : 'rgba(0,0,0,.05)',
      //Number - Width of the grid lines
      scaleGridLineWidth      : 1,
      //Boolean - Whether to show horizontal lines (except X axis)
      scaleShowHorizontalLines: true,
      //Boolean - Whether to show vertical lines (except Y axis)
      scaleShowVerticalLines  : true,
      //Boolean - Whether the line is curved between points
      bezierCurve             : true,
      //Number - Tension of the bezier curve between points
      bezierCurveTension      : 0.3,
      //Boolean - Whether to show a dot for each point
      pointDot                : false,
      //Number - Radius of each point dot in pixels
      pointDotRadius          : 4,
      //Number - Pixel width of point dot stroke
      pointDotStrokeWidth     : 1,
      //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
      pointHitDetectionRadius : 20,
      //Boolean - Whether to show a stroke for datasets
      datasetStroke           : true,
      //Number - Pixel width of dataset stroke
      datasetStrokeWidth      : 2,
      //Boolean - Whether to fill the dataset with a color
      datasetFill             : true,
      //String - A legend template
      legendTemplate          : '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].lineColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
      //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
      maintainAspectRatio     : true,
      //Boolean - whether to make the chart responsive to window resizing
      responsive              : true
    }


    areaChart.Line(areaChartData, areaChartOptions)

    barChartOptions.datasetFill = false
    barChart.Bar(barChartData, barChartOptions)
  })
</script>					
