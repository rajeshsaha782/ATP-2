@{
    ViewBag.Title = "Profit_graph";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<html>
<head>
    <link href="~/Styles/bootstrap.min.css" rel="stylesheet" />

    <link href="~/Styles/AdminLTE.min.css" rel="stylesheet" />


</head>
   

    <div class="col-md-14" style="padding-bottom:20px">

              <div id="piechart">
          
            </div>

          
     </div>

     <div style="padding-bottom:20px">

        <select>
            <option>2017</option>
            <option>2018</option>
         </select>
     </div>

    <div class="col-md-14">

          <div class="box box-primary">
            <div class="box-header with-border">
              <h3 class="box-title">Annual Profit</h3>
            </div>
            <div class="box-body">
              <div class="chart">
                <canvas id="areaChart" style="height:250px"></canvas>
              </div>
            </div>

          </div>
          </div>


<script src="~/Styles/jquery.min.js"></script>

<script src="~/Styles/Chart.js"></script>

 <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script type="text/javascript">
    // Load google charts
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);

    // Draw the chart and set the chart values
    function drawChart() {
        var data = google.visualization.arrayToDataTable([
        ['Task', 'Hours per Day'],
        ['T-shirt', 228],
        ['Pant', 102],
        ['Panjabi',200],
        ['Saree', 220],
        ['Shoe', 128],
        ['Watch', 143],
        ['Wallet', 153],
        ['Panjabi', 200],
        ['Saree', 220],
        ['Shoe', 128],
        ['Watch', 143],
        ['Wallet', 153]
        ]);


        var options = { 'title': 'Selling Products last Month', 'width': 750, 'height': 500 };


        var chart = new google.visualization.PieChart(document.getElementById('piechart'));
        chart.draw(data, options);
    }
</script>

<script>
    var TotalSell = [1128, 1148, -1140, -1119, 1186, 1127, 1190, 2280, 1270, 2230, 2250, 1275];
  $(function () {

    var areaChartCanvas = $('#areaChart').get(0).getContext('2d')
    // This will get the first returned node in the jQuery collection.
    var areaChart       = new Chart(areaChartCanvas)
    
    var areaChartData = {
      labels  : ['January', 'February', 'March', 'April', 'May', 'June', 'July','August','September','October','November','Decmber'],
      datasets: [
       
        {
          label               : 'Total sell',
          fillColor           : 'rgba(260,91,98,0.9)',
          strokeColor         : 'rgba(60,141,188,0.8)',
          pointColor          : '#3b8bba',
          pointStrokeColor    : 'rgba(60,141,188,1)',
          pointHighlightFill  : '#fff',
          pointHighlightStroke: 'rgba(60,141,188,1)',
          data: [TotalSell[0], TotalSell[1], TotalSell[2], TotalSell[3], TotalSell[4], TotalSell[5], TotalSell[6], TotalSell[7], TotalSell[8], TotalSell[9], TotalSell[10], TotalSell[11]]
        }
		
      ]
    }

    var areaChartOptions = {
      //Boolean - If we should show the scale at all
      showScale               : true,
      //Boolean - Whether grid lines are shown across the chart
      scaleShowGridLines      : false,
      //String - Colour of the grid lines
      scaleGridLineColor      : 'rgba(0,0,0,.05)',
      //Number - Width of the grid lines
      scaleGridLineWidth      : 1,
      //Boolean - Whether to show horizontal lines (except X axis)
      scaleShowHorizontalLines: true,
      //Boolean - Whether to show vertical lines (except Y axis)
      scaleShowVerticalLines  : true,
      //Boolean - Whether the line is curved between points
      bezierCurve             : true,
      //Number - Tension of the bezier curve between points
      bezierCurveTension      : 0.3,
      //Boolean - Whether to show a dot for each point
      pointDot                : false,
      //Number - Radius of each point dot in pixels
      pointDotRadius          : 4,
      //Number - Pixel width of point dot stroke
      pointDotStrokeWidth     : 1,
      //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
      pointHitDetectionRadius : 20,
      //Boolean - Whether to show a stroke for datasets
      datasetStroke           : true,
      //Number - Pixel width of dataset stroke
      datasetStrokeWidth      : 2,
      //Boolean - Whether to fill the dataset with a color
      datasetFill             : true,
      //String - A legend template
      legendTemplate          : '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].lineColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
      //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
      maintainAspectRatio     : true,
      //Boolean - whether to make the chart responsive to window resizing
      responsive              : true
    }


    areaChart.Line(areaChartData, areaChartOptions)

    barChartOptions.datasetFill = false
    barChart.Bar(barChartData, barChartOptions)
  })
</script>
</body>
</html>